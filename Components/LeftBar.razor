<nav class="flex flex-col w-[64px] items-center gap-2 bg-gray-50" role="navigation" aria-label="Workflow tools sidebar">
    <img class="mt-5" src="Icons/Project%20Avatar.svg" alt="Project avatar" role="img"/>
    <div class="mt-5 mb-5">
        <img src="Icons/Search.svg" alt="Search" role="img"/>
    </div>
    <div class="h-full py-4 flex flex-col items-center justify-center align-middle gap-4" role="group" aria-label="Draggable workflow components">
        <button draggable="true" @ondragstart='@(e => OnDragStart(e, "regular"))'
                class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Drag to add regular node">
            <span class="sr-only">Drag to add regular node</span>
            <img src="Icons/Home.svg" alt="Regular node"/>
        </button>
        <button draggable="true" @ondragstart='@(e => OnDragStart(e, "loop"))'
                class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Drag to add loop node">
            <span class="sr-only">Drag to add loop node</span>
            <img src="Icons/Workflows.svg" alt="Loop node"/>
        </button>
        <button draggable="true" @ondragstart='@(e => OnDragStart(e, "if"))'
                class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Drag to add condition node">
            <span class="sr-only">Drag to add condition node</span>
            <img src="Icons/Table.svg" alt="Condition node"/>
        </button>
        <button draggable="true" @ondragstart='@(e => OnDragStart(e, "regular"))'
                class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Drag to add app node">
            <span class="sr-only">Drag to add app node</span>
            <img src="Icons/Apps.svg" alt="App node"/>
        </button>
        <button draggable="true" @ondragstart='@(e => OnDragStart(e, "loop"))'
                class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Drag to add connection node">
            <span class="sr-only">Drag to add connection node</span>
            <img src="Icons/Connections.svg" alt="Connection node"/>
        </button>
        <button draggable="true" @ondragstart='@(e => OnDragStart(e, "if"))'
                class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Drag to add history node">
            <span class="sr-only">Drag to add history node</span>
            <img src="Icons/History.svg" alt="History node"/>
        </button>

        <div class="mt-auto"></div>

        <button class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Settings">
            <span class="sr-only">Settings</span>
            <img src="Icons/Settings.svg" alt="Settings"/>
        </button>

        <button class="p-2 rounded-lg hover:bg-gray-200 transition-colors duration-200"
                aria-label="Help">
            <span class="sr-only">Help</span>
            <img src="Icons/Details.svg" alt="Help"/>
        </button>

        <div class="my-2 border h-px w-full"></div>

        <img src="https://avatars.githubusercontent.com/u/93647029" class="size-[42px] rounded-full" alt="Account settings"/>
    </div>
</nav>

@code {
    [Parameter]
    public EventCallback<string> NodeDragStarted { get; set; }

    private async Task OnDragStart(DragEventArgs e, string nodeType)
    {
        await NodeDragStarted.InvokeAsync(nodeType);
    }
}
